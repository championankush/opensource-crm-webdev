{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ankba\\\\Desktop\\\\opensource-crm\\\\client\\\\src\\\\contexts\\\\AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport toast from 'react-hot-toast';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(undefined);\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  // Set up axios defaults\n  axios.defaults.baseURL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\n\n  // Add token to requests if it exists\n  axios.interceptors.request.use(config => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  });\n\n  // Handle token expiration\n  axios.interceptors.response.use(response => response, error => {\n    var _error$response;\n    if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n      localStorage.removeItem('token');\n      setUser(null);\n      window.location.href = '/login';\n    }\n    return Promise.reject(error);\n  });\n  const login = async (token, userData) => {\n    try {\n      localStorage.setItem('token', token);\n      setUser(userData);\n      toast.success('Login successful!');\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      const message = ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.error) || 'Login failed';\n      toast.error(message);\n      throw error;\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    setUser(null);\n    toast.success('Logged out successfully');\n  };\n  const updateUser = userData => {\n    if (user) {\n      setUser({\n        ...user,\n        ...userData\n      });\n    }\n  };\n\n  // Check if user is already logged in\n  useEffect(() => {\n    const checkAuth = async () => {\n      const token = localStorage.getItem('token');\n      if (token) {\n        try {\n          const response = await axios.get('/auth/profile');\n          setUser(response.data.user);\n        } catch (error) {\n          localStorage.removeItem('token');\n        }\n      }\n      setLoading(false);\n    };\n    checkAuth();\n  }, []);\n  const value = {\n    user,\n    loading,\n    login,\n    logout,\n    updateUser\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"NiO5z6JIqzX62LS5UWDgIqbZYyY=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","axios","toast","jsxDEV","_jsxDEV","AuthContext","undefined","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","loading","setLoading","defaults","baseURL","process","env","REACT_APP_API_URL","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization","response","error","_error$response","status","removeItem","window","location","href","Promise","reject","login","userData","setItem","success","_error$response2","_error$response2$data","message","data","logout","updateUser","checkAuth","get","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ankba/Desktop/opensource-crm/client/src/contexts/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';\r\nimport axios from 'axios';\r\nimport toast from 'react-hot-toast';\r\n\r\ninterface User {\r\n  id: number;\r\n  email: string;\r\n  first_name: string;\r\n  last_name: string;\r\n  role: string;\r\n  avatar?: string;\r\n}\r\n\r\ninterface AuthContextType {\r\n  user: User | null;\r\n  loading: boolean;\r\n  login: (token: string, userData: User) => Promise<void>;\r\n  logout: () => void;\r\n  updateUser: (userData: Partial<User>) => void;\r\n}\r\n\r\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (context === undefined) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\ninterface AuthProviderProps {\r\n  children: ReactNode;\r\n}\r\n\r\nexport const AuthProvider: React.FC<AuthProviderProps> = ({ children }) => {\r\n  const [user, setUser] = useState<User | null>(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  // Set up axios defaults\r\n  axios.defaults.baseURL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\r\n\r\n  // Add token to requests if it exists\r\n  axios.interceptors.request.use((config) => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  });\r\n\r\n  // Handle token expiration\r\n  axios.interceptors.response.use(\r\n    (response) => response,\r\n    (error) => {\r\n      if (error.response?.status === 401) {\r\n        localStorage.removeItem('token');\r\n        setUser(null);\r\n        window.location.href = '/login';\r\n      }\r\n      return Promise.reject(error);\r\n    }\r\n  );\r\n\r\n  const login = async (token: string, userData: User) => {\r\n    try {\r\n      localStorage.setItem('token', token);\r\n      setUser(userData);\r\n      toast.success('Login successful!');\r\n    } catch (error: any) {\r\n      const message = error.response?.data?.error || 'Login failed';\r\n      toast.error(message);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem('token');\r\n    setUser(null);\r\n    toast.success('Logged out successfully');\r\n  };\r\n\r\n  const updateUser = (userData: Partial<User>) => {\r\n    if (user) {\r\n      setUser({ ...user, ...userData });\r\n    }\r\n  };\r\n\r\n  // Check if user is already logged in\r\n  useEffect(() => {\r\n    const checkAuth = async () => {\r\n      const token = localStorage.getItem('token');\r\n      if (token) {\r\n        try {\r\n          const response = await axios.get('/auth/profile');\r\n          setUser(response.data.user);\r\n        } catch (error) {\r\n          localStorage.removeItem('token');\r\n        }\r\n      }\r\n      setLoading(false);\r\n    };\r\n\r\n    checkAuth();\r\n  }, []);\r\n\r\n  const value: AuthContextType = {\r\n    user,\r\n    loading,\r\n    login,\r\n    logout,\r\n    updateUser,\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}