{"ast":null,"code":"import _objectSpread from\"C:/Users/ankba/Desktop/opensource-crm/client/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{createContext,useContext,useState,useEffect}from'react';import axios from'axios';import toast from'react-hot-toast';import{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext(undefined);export const useAuth=()=>{const context=useContext(AuthContext);if(context===undefined){throw new Error('useAuth must be used within an AuthProvider');}return context;};export const AuthProvider=_ref=>{let{children}=_ref;const[user,setUser]=useState(null);const[loading,setLoading]=useState(true);// Set up axios defaults\naxios.defaults.baseURL=process.env.REACT_APP_API_URL||'http://localhost:5000/api';// Add token to requests if it exists\naxios.interceptors.request.use(config=>{const token=localStorage.getItem('token');if(token){config.headers.Authorization=\"Bearer \".concat(token);}return config;});// Handle token expiration\naxios.interceptors.response.use(response=>response,error=>{var _error$response;if(((_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.status)===401){localStorage.removeItem('token');setUser(null);window.location.href='/login';}return Promise.reject(error);});const login=async(email,password)=>{try{const response=await axios.post('/auth/login',{email,password});const{token,user:userData}=response.data;localStorage.setItem('token',token);setUser(userData);toast.success('Login successful!');}catch(error){var _error$response2,_error$response2$data;const message=((_error$response2=error.response)===null||_error$response2===void 0?void 0:(_error$response2$data=_error$response2.data)===null||_error$response2$data===void 0?void 0:_error$response2$data.error)||'Login failed';toast.error(message);throw error;}};const logout=()=>{localStorage.removeItem('token');setUser(null);toast.success('Logged out successfully');};const updateUser=userData=>{if(user){setUser(_objectSpread(_objectSpread({},user),userData));}};// Check if user is already logged in\nuseEffect(()=>{const checkAuth=async()=>{const token=localStorage.getItem('token');if(token){try{const response=await axios.get('/auth/profile');setUser(response.data.user);}catch(error){localStorage.removeItem('token');}}setLoading(false);};checkAuth();},[]);const value={user,loading,login,logout,updateUser};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:value,children:children});};","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","axios","toast","jsx","_jsx","AuthContext","undefined","useAuth","context","Error","AuthProvider","_ref","children","user","setUser","loading","setLoading","defaults","baseURL","process","env","REACT_APP_API_URL","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization","concat","response","error","_error$response","status","removeItem","window","location","href","Promise","reject","login","email","password","post","userData","data","setItem","success","_error$response2","_error$response2$data","message","logout","updateUser","_objectSpread","checkAuth","get","value","Provider"],"sources":["C:/Users/ankba/Desktop/opensource-crm/client/src/contexts/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';\r\nimport axios from 'axios';\r\nimport toast from 'react-hot-toast';\r\n\r\ninterface User {\r\n  id: number;\r\n  email: string;\r\n  first_name: string;\r\n  last_name: string;\r\n  role: string;\r\n  avatar?: string;\r\n}\r\n\r\ninterface AuthContextType {\r\n  user: User | null;\r\n  loading: boolean;\r\n  login: (email: string, password: string) => Promise<void>;\r\n  logout: () => void;\r\n  updateUser: (userData: Partial<User>) => void;\r\n}\r\n\r\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (context === undefined) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\ninterface AuthProviderProps {\r\n  children: ReactNode;\r\n}\r\n\r\nexport const AuthProvider: React.FC<AuthProviderProps> = ({ children }) => {\r\n  const [user, setUser] = useState<User | null>(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  // Set up axios defaults\r\n  axios.defaults.baseURL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\r\n\r\n  // Add token to requests if it exists\r\n  axios.interceptors.request.use((config) => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  });\r\n\r\n  // Handle token expiration\r\n  axios.interceptors.response.use(\r\n    (response) => response,\r\n    (error) => {\r\n      if (error.response?.status === 401) {\r\n        localStorage.removeItem('token');\r\n        setUser(null);\r\n        window.location.href = '/login';\r\n      }\r\n      return Promise.reject(error);\r\n    }\r\n  );\r\n\r\n  const login = async (email: string, password: string) => {\r\n    try {\r\n      const response = await axios.post('/auth/login', { email, password });\r\n      const { token, user: userData } = response.data;\r\n      \r\n      localStorage.setItem('token', token);\r\n      setUser(userData);\r\n      toast.success('Login successful!');\r\n    } catch (error: any) {\r\n      const message = error.response?.data?.error || 'Login failed';\r\n      toast.error(message);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem('token');\r\n    setUser(null);\r\n    toast.success('Logged out successfully');\r\n  };\r\n\r\n  const updateUser = (userData: Partial<User>) => {\r\n    if (user) {\r\n      setUser({ ...user, ...userData });\r\n    }\r\n  };\r\n\r\n  // Check if user is already logged in\r\n  useEffect(() => {\r\n    const checkAuth = async () => {\r\n      const token = localStorage.getItem('token');\r\n      if (token) {\r\n        try {\r\n          const response = await axios.get('/auth/profile');\r\n          setUser(response.data.user);\r\n        } catch (error) {\r\n          localStorage.removeItem('token');\r\n        }\r\n      }\r\n      setLoading(false);\r\n    };\r\n\r\n    checkAuth();\r\n  }, []);\r\n\r\n  const value: AuthContextType = {\r\n    user,\r\n    loading,\r\n    login,\r\n    logout,\r\n    updateUser,\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}